# Generated by Django 4.1.10 on 2024-01-12 21:26

from datetime import datetime, timezone

from django.db import migrations


def populate_has_rowcols(apps, schema_editor):
    Features = apps.get_model('vision_backend', 'Features')

    all_features = Features.objects.filter(extracted=True)

    # Without any exceptions, 2020-12-31 00:00 UTC is a cutoff production
    # can use between legacy and non-legacy.
    # Production doesn't have any null dates for extracted=True.
    #
    # If the situation differs in your env, set has_rowcols values
    # manually as needed, and skip (fake-apply) this migration as needed.
    # You're done once
    # Features.objects.filter(extracted=True, has_rowcols__isnull=True)
    # is an empty set.

    earlier_features = all_features.filter(
        extracted_date__lt=datetime(2020, 12, 31, tzinfo=timezone.utc))
    earlier_features.update(has_rowcols=False)

    later_features = all_features.filter(
        extracted_date__gte=datetime(2020, 12, 31, tzinfo=timezone.utc))
    later_features.update(has_rowcols=True)


class Migration(migrations.Migration):

    dependencies = [
        ('vision_backend', '0020_features_has_rowcols'),
    ]

    operations = [
        migrations.RunPython(populate_has_rowcols, migrations.RunPython.noop),
    ]
