# Generated by Django 4.1.10 on 2024-04-17 00:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('images', '0035_rename_sourceinvite_table'),
    ]

    state_operations = [
        migrations.CreateModel(
            name='SourceInvite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('source_perm', models.CharField(choices=[('source_view', 'View'), ('source_edit', 'Edit'), ('source_admin', 'Admin')], max_length=50)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='invites_sent', to=settings.AUTH_USER_MODEL)),
                ('source', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='images.source')),
            ],
            options={
                'unique_together': {('recipient', 'source')},
            },
        ),
    ]

    operations = [
        # We are moving the SourceInvite model from one app to
        # another, and to achieve that, we:
        # - Define a database-only rename of the Postgres table
        # - Define a state-only model creation (i.e. doesn't actually
        #   create a Postgres table) in this app, which is what we're doing
        #   here
        # - Define a state-only model deletion (i.e. doesn't actually
        #   delete a Postgres table) in the images app
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]
